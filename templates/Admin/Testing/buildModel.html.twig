{# Template Parts #}
{% extends "Admin/base.html.twig" %}

{# Document #}
{% block head_title %}{{ title('testing_model_build_title'|trans) }}{% endblock %}

{# Content Title #}
{% block content_head %}
    <span class="text">{{ 'testing_model_build_title'|trans }}</span>
    <span class="desc">{{ 'testing_model_build_desc'|trans }}</span>
{% endblock %}

{# Content Body #}
{% block content_body %}
    <div class="content-form">
        {{ form_start(form) }}
        {{ form_widget(form) }}
        {{ form_end(form) }}
    </div>
{% endblock %}

{% block scripts %}
    <script>
        jQuery(document).on('click', '.add-assertion, .add-action', function () {
            addElement(this);
        });

        jQuery(document).on('click', '.add-place', function () {
            addElement(this);
            updatePlacesSelect();
        });

        jQuery(document).on('click', '.add-transition', function () {
            addElement(this);
            updateTransitionsSelect();
        });

        jQuery(document).on('click', '.add-arc', function () {
            addElement(this);
            updatePlacesSelect();
            updateTransitionsSelect();
        });

        function addElement(button) {
            var list = $(button).parent().parent().prev().find($(button).attr('data-list-selector'));
            // Try to find the counter of the list or use the length of the list
            var counter = list.data('widget-counter') || list.children().length;

            // grab the prototype template
            var newWidget = list.attr('data-prototype');
            // replace the "__name__" used in the id and name of the prototype
            // with a number that's unique to your emails
            // end name attribute looks like name="contact[emails][2]"
            newWidget = newWidget.replace(/__name__/g, counter);
            // Increase the counter
            counter++;
            // And store it, the length cannot be used if deleting widgets is allowed
            list.data('widget-counter', counter);

            // create a new list element and add it to the list
            var newElem = $(list.attr('data-widget-entries')).html(newWidget);
            newElem.appendTo(list);
        }

        jQuery(document).on('change', '.place-label', function (text) {
            updatePlacesSelect();
        });

        jQuery(document).on('change', '.transition-label', function (text) {
            updateTransitionsSelect();
        });

        function updatePlacesSelect() {
            var places = [];
            $('.place-label').each(function (index, label) {
                places.push({id: index, label: $(label).val()});
            });
            $('.places-select').selectize({
                valueField: 'id',
                labelField: 'label',
                searchField: 'label',
                options: places,
                maxItems: 1,
            });
        }

        function updateTransitionsSelect() {
            var transitions = [];
            $('.transition-label').each(function (index, label) {
                transitions.push({id: index, label: $(label).val()});
            });
            $('.transitions-select').selectize({
                valueField: 'id',
                labelField: 'label',
                searchField: 'label',
                options: transitions,
                maxItems: 1,
            });
        }
    </script>
{% endblock %}
