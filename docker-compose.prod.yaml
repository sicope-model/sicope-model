version: '3.4'

services:
    database:
        volumes:
            - postgres_data:/var/lib/postgresql/data

    admin:
        image: tienvx/sicope-model-admin:${TAG:-lastest}
        build:
            context: .
            target: build_admin
        depends_on:
            - database
        restart: unless-stopped
        healthcheck:
            interval: 10s
            timeout: 3s
            retries: 3
            start_period: 30s
        environment:
            DATABASE_URL: postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-pass}@database:5432/${POSTGRES_DB:-db}?serverVersion=${POSTGRES_VERSION:-13}&charset=UTF-8

    worker:
        image: tienvx/sicope-model-worker:${TAG:-lastest}
        build:
            context: .
            target: build_worker
        depends_on:
            - database
        restart: unless-stopped
        environment:
            DATABASE_URL: postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-pass}@database:5432/${POSTGRES_DB:-db}?serverVersion=${POSTGRES_VERSION:-13}&charset=UTF-8
            SELENIUM_SERVER: ${SELENIUM_SERVER:-http://selenoid:4444}
            MAILER_DSN: ${MAILER_DSN}

    caddy:
        image: tienvx/sicope-model-caddy:${TAG:-lastest}
        build:
            context: .
            target: build_caddy
        depends_on:
            - admin
        environment:
            SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - caddy_data:/data
            - caddy_config:/config

volumes:
    postgres_data:
    caddy_data:
    caddy_config:
